{"version":3,"sources":["features/Spiel/spielSlice.js","features/Menue/menueSlice.js","features/Menue/spielmodus.js","features/Menue/farbe.js","features/Menue/submission.js","features/Menue/anzeige.js","features/Menue/menue.js","features/Spiel/feld.js","features/Spiel/spielFunctions.js","features/Spiel/spiel.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["row","col","menueSlice","createSlice","name","initialState","spielmodus","farbe","isDisabled","text","computerSpielt","reducers","setSpielmodus","state","action","payload","setComputerSpielt","setFarbe","setIsDisabled","changeText","selectDisplayFarbe","menue","display","actions","Spielmodus","dispatch","useDispatch","useSelector","handleSpielmodusInput","spielmod","document","querySelector","value","useEffect","data-testid","type","id","onChange","for","title","Farbe","displayFarbe","handleFarbeInput","computerFarbe","className","style","checked","felder","i","j","feldKey","toString","isNextField","push","spielSlice","spieler","status","zug","zugStatus","computerZieht","resetFelder","resetSpieler","resetComputerZieht","setStatus","setZugStatus","toggleSpieler","changeFarbe","feld","find","f","newFarbe","setZug","changeIsNextField","changeToNextField","toggleHasWon","hasWon","toggleComputerZieht","setWinner","Submission","onClick","disabled","Anzeige","spiel","newText","Menue","Feld","props","gridArea","backgroundColor","color","findFeldFarbe","onMouseOver","target","cursor","border","onMouseOut","nextFieldFeldKey","onMouseDown","getFeld","checkSeries","c","r","toChange","row1","row2","row3","row4","col1","col2","col3","col4","feld1","feld2","feld3","feld4","checkHasWon","getFieldsNextMove","player","map","checkFields","nextFields","fieldsNextMove","checkFieldsNextMove","gegner","reihe","wessenReihe","gegnerField","Spiel","felderObject","newFields","felderArray","item","generateFelder","field","filter","length","Math","floor","random","getComputerZug","App","store","configureStore","reducer","menueReducer","spielReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.31fa60ce.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\n\r\nlet felder = []\r\nlet id = 0\r\nlet row, col\r\n\r\nfor (let i=1; i<7; i++) {\r\n    row = i\r\n    for (let j=1; j<8; j++) {\r\n        col = j\r\n        id++\r\n        let feldKey = 'feld' + id.toString()\r\n        let isNextField\r\n        row === 6 ? isNextField = true : isNextField = false\r\n        \r\n        felder.push({\r\n            feldKey: feldKey,\r\n            row: row,\r\n            col: col,\r\n            farbe: 'leer',\r\n            isNextField: isNextField\r\n        })\r\n    }\r\n}\r\n\r\nexport const spielSlice = createSlice({\r\n    name: 'spiel',\r\n    initialState: {\r\n        felder: felder,\r\n        spieler: 'rot',\r\n        status: 'vorSpiel',\r\n        zug: -1,\r\n        zugStatus: 'bereit',\r\n        computerZieht: false\r\n    },\r\n    reducers: {\r\n        resetFelder: (state, action) => {\r\n            state.felder = felder\r\n        },\r\n        resetSpieler: (state, action) => {\r\n            state.spieler = 'rot'\r\n        },\r\n        resetComputerZieht: (state, action) => {\r\n            const computerSpielt = action.payload\r\n            computerSpielt === 'rot' ? state.computerZieht = true : state.computerZieht = false\r\n        },\r\n        setStatus: (state, action) => {\r\n            state.status = action.payload\r\n        },\r\n        setZugStatus: (state, action) => {\r\n            state.zugStatus = action.payload\r\n        },\r\n        toggleSpieler: (state, action) => {\r\n            state.spieler === 'rot' ? state.spieler = 'gelb' : state.spieler = 'rot'\r\n        },\r\n        changeFarbe: (state, action) => {\r\n            const feld = state.felder.find(f => f.feldKey === action.payload.feldKey)\r\n            const newFarbe = action.payload.farbe\r\n            feld.farbe = newFarbe\r\n        },\r\n        setZug: (state, action) => {\r\n            if (action.payload === 'add') {\r\n                state.zug++\r\n            } else if (action.payload === 'reset') {\r\n                state.zug = 0\r\n            }\r\n        },\r\n        changeIsNextField: (state, action) => {\r\n            const feld = state.felder.find(f => f.feldKey === action.payload)\r\n            feld.isNextField = false\r\n        },\r\n        changeToNextField: (state, action) => {\r\n            const nextField = state.felder.find(f => f.feldKey === action.payload)\r\n            nextField.isNextField = true\r\n        },\r\n        toggleHasWon: (state, action) => {\r\n            state.hasWon = true\r\n        },\r\n        toggleComputerZieht: (state, action) => {\r\n            state.computerZieht ? state.computerZieht = false : state.computerZieht = true\r\n        }\r\n    }\r\n})\r\n\r\nexport default spielSlice.reducer\r\nexport const {\r\n    resetFelder,\r\n    resetSpieler,\r\n    resetComputerZieht,\r\n    toggleSpieler,\r\n    setZugStatus,\r\n    changeFarbe,\r\n    changeIsNextField,\r\n    changeToNextField,\r\n    setWinner,\r\n    setStatus,\r\n    setZug,\r\n    toggleComputerZieht\r\n} = spielSlice.actions\r\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nexport const menueSlice = createSlice({\r\n    name: 'menue',\r\n    initialState: {\r\n        spielmodus: '',\r\n        farbe: 'rot',\r\n        isDisabled: true,\r\n        text: '',\r\n        computerSpielt: 'gelb'\r\n    },\r\n    reducers: {\r\n        setSpielmodus: (state, action) => {\r\n            state.spielmodus = action.payload\r\n        },\r\n        setComputerSpielt: (state, action) => {\r\n            state.computerSpielt = action.payload\r\n        },\r\n        setFarbe: (state, action) => {\r\n            state.farbe = action.payload\r\n        },\r\n        setIsDisabled: (state, action) => {\r\n            state.isDisabled = false\r\n        },\r\n        changeText: (state, action) => {\r\n            state.text = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const selectDisplayFarbe = (state) => {\r\n    if (state.menue.spielmodus === 'allein') {\r\n        return {display: 'block'}\r\n    } return {display: 'none'}\r\n}\r\n\r\nexport default menueSlice.reducer;\r\nexport const {\r\n    setSpielmodus,\r\n    setFarbe,\r\n    setIsDisabled,\r\n    changeText,\r\n    setComputerSpielt\r\n} = menueSlice.actions;\r\n","import {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {setSpielmodus, setIsDisabled, setComputerSpielt} from './menueSlice.js'\r\n\r\nexport const Spielmodus = () => {\r\n    const dispatch = useDispatch()\r\n    const spielmodus = useSelector(state => state.menue.spielmodus)\r\n\r\n    const handleSpielmodusInput = () => {\r\n        const spielmod = document.querySelector('input[name=\"spielmodus\"]:checked').value;\r\n        dispatch(setSpielmodus(spielmod))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (spielmodus === 'allein') {\r\n            dispatch(setIsDisabled(true))\r\n        }\r\n        else if (spielmodus === 'zuZweit') {\r\n            dispatch(setIsDisabled(false))\r\n            dispatch(setComputerSpielt('spieltNicht'))\r\n        }\r\n    }, [dispatch, spielmodus])\r\n\r\n    return (\r\n        <form data-testid='spielmodus'>\r\n            <p>Möchtest du alleine oder zu zweit spielen?</p>\r\n            <input\r\n                type='radio'\r\n                id='allein'\r\n                value='allein'\r\n                name='spielmodus'\r\n                onChange={handleSpielmodusInput}\r\n                data-testid='allein'\r\n            />\r\n            <label\r\n                for='allein'\r\n                title='Du spielst allein gegen den Computer'\r\n            >Allein</label>\r\n            <br />\r\n            <input\r\n                type='radio'\r\n                id='zuZweit'\r\n                value='zuZweit'\r\n                name='spielmodus'\r\n                onChange={handleSpielmodusInput}\r\n                data-testid='zuZweit'\r\n            />\r\n            <label\r\n                for='zuZweit'\r\n                title='Du spielst am selben Computer gegen einen anderen Spieler'\r\n            >Zu zweit</label>\r\n            <br />\r\n        </form>\r\n    )\r\n}\r\n","import {useSelector, useDispatch} from 'react-redux'\r\nimport {setFarbe, setIsDisabled, selectDisplayFarbe, setComputerSpielt} from './menueSlice.js'\r\n\r\nexport const Farbe = () => {\r\n    const dispatch = useDispatch()\r\n    const displayFarbe = useSelector(selectDisplayFarbe)\r\n\r\n    const handleFarbeInput = () => {\r\n        const farbe = document.querySelector('input[name=\"farbe\"]:checked').value;\r\n        let computerFarbe\r\n        farbe === 'rot' ? computerFarbe = 'gelb' : computerFarbe = 'rot'\r\n        dispatch(setFarbe(farbe))\r\n        dispatch(setComputerSpielt(computerFarbe))\r\n        dispatch(setIsDisabled(false))\r\n    }\r\n\r\n    return (\r\n        <form className='farbe' style={displayFarbe} data-testid='farbe'>\r\n            <p>Wen möchtest du spielen?</p>\r\n            <input\r\n                type='radio'\r\n                id='rot'\r\n                value='rot'\r\n                name='farbe'\r\n                onChange={handleFarbeInput}\r\n                data-testid='rot'\r\n                checked\r\n            />\r\n            <label\r\n                for='rot'\r\n                title='Du spielst Rot, Rot beginnt'\r\n            >Rot</label>\r\n            <br />\r\n            <input\r\n                type='radio'\r\n                id='gelb'\r\n                value='gelb'\r\n                name='farbe'\r\n                onChange={handleFarbeInput}\r\n                data-testid='gelb'\r\n            />\r\n            <label\r\n                for='gelb'\r\n                title='Du spielst Gelb, Rot beginnt'\r\n            >Gelb</label>\r\n            <br />\r\n        </form>\r\n    )\r\n}","import {useSelector, useDispatch} from 'react-redux'\r\nimport {\r\n    resetFelder,\r\n    resetSpieler,\r\n    resetComputerZieht,\r\n    setStatus,\r\n    setZug\r\n} from '../Spiel/spielSlice.js'\r\n\r\nexport const Submission = () => {\r\n    const dispatch = useDispatch()\r\n    const isDisabled = useSelector(state => state.menue.isDisabled)\r\n    const computerSpielt = useSelector(state => state.menue.computerSpielt)\r\n\r\n    const handleSubmissionInput = () => {\r\n        dispatch(resetFelder())\r\n        dispatch(resetSpieler())\r\n        dispatch(resetComputerZieht(computerSpielt))\r\n        dispatch(setStatus('laufend'))\r\n        dispatch(setZug('reset'))\r\n    }\r\n\r\n    return (\r\n        <button\r\n            type='button'\r\n            id='los'\r\n            onClick={handleSubmissionInput}\r\n            disabled={isDisabled}\r\n            title='Startet neues Spiel'\r\n        >Los!</button>\r\n    )\r\n}\r\n","import {useSelector, useDispatch} from 'react-redux'\r\nimport {useEffect} from 'react'\r\nimport {changeText} from './menueSlice.js'\r\n\r\nexport const Anzeige = () => {\r\n    const dispatch = useDispatch()\r\n    const status = useSelector(state => state.spiel.status)\r\n    const text = useSelector(state => state.menue.text)\r\n\r\n    useEffect(() => {\r\n        let newText\r\n        if (status === 'rotWon') {\r\n            newText = 'Rot hat gewonnen!'\r\n        } else if (status === 'gelbWon') {\r\n            newText = 'Gelb hat gewonnen!'\r\n        } else if (status === 'draw') {\r\n            newText = 'Unentschieden!'\r\n        }\r\n        dispatch(changeText(newText))\r\n    }, [status, dispatch])\r\n\r\n    return <p className='anzeige'>{text}</p>\r\n}\r\n","import './menue.css';\r\nimport {Spielmodus} from './spielmodus.js';\r\nimport {Farbe} from './farbe.js';\r\nimport {Submission} from './submission.js';\r\nimport {Anzeige} from './anzeige.js';\r\n\r\nexport const Menue = () => {\r\n    return (\r\n        <div className='menue'>\r\n            <Spielmodus />\r\n            <Farbe />\r\n            <Submission />\r\n            <Anzeige />\r\n        </div>\r\n    );\r\n};\r\n","import {useSelector, useDispatch} from 'react-redux'\r\nimport {\r\n    changeFarbe,\r\n    changeIsNextField,\r\n    changeToNextField,\r\n    setZugStatus\r\n} from './spielSlice.js'\r\n\r\nexport const Feld = (props) => {\r\n    const dispatch = useDispatch()\r\n    const {row, col, feldKey} = props\r\n    const gridArea = `${row} / ${col} / ${row} / ${col}`\r\n    const spieler = useSelector(state => state.spiel.spieler)\r\n    const felder = useSelector(state => state.spiel.felder)\r\n    const feld = felder.find(f => f.feldKey === feldKey)\r\n    const {farbe, isNextField} = feld\r\n    const status = useSelector(state => state.spiel.status)\r\n    const computerZieht = useSelector(state => state.spiel.computerZieht)\r\n\r\n    const findFeldFarbe = () => {\r\n        let color\r\n        if (farbe === 'rot') {\r\n            color = 'red'\r\n        } else if (farbe === 'gelb') {\r\n            color = 'yellow'\r\n        } else if (farbe === 'leer') {\r\n            color = 'white'\r\n        }\r\n        return color\r\n    }\r\n\r\n    const style = {\r\n        gridArea: gridArea,\r\n        backgroundColor: findFeldFarbe()\r\n    }\r\n\r\n    const handleMouseOver = ({target}) => {\r\n        if (isNextField && status === 'laufend' && !computerZieht) {\r\n            let color\r\n            spieler === 'rot' ? color = 'red' : color = 'yellow'\r\n            target.style.backgroundColor = color\r\n            target.style.cursor = 'pointer'\r\n            target.style.border = 'orange 2px solid'\r\n        }\r\n    }\r\n\r\n    const handleMouseOut = ({target}) => {\r\n        if (farbe === 'leer') {\r\n            target.style.backgroundColor = 'white'\r\n            target.style.border = 'none'\r\n            target.style.cursor = 'unset'\r\n        }\r\n    }\r\n\r\n    const handleMouseDown = ({target}) => {\r\n        if (isNextField && status === 'laufend' && !computerZieht) {\r\n            let color\r\n            spieler === 'rot' ? color = 'darkred' : color = 'goldenrod'\r\n            target.style.backgroundColor = color\r\n        }\r\n    }\r\n    \r\n    const handleClick = ({target}) => {\r\n        if (isNextField && status === 'laufend' && !computerZieht) {\r\n            target.style.border = 'none'\r\n            target.style.cursor = 'unset'\r\n            dispatch(changeFarbe({\r\n                feldKey: feldKey,\r\n                farbe: spieler\r\n            }))\r\n            dispatch(changeIsNextField(feldKey))\r\n            if (row > 1) {\r\n                const nextFieldFeldKey = felder.find(\r\n                    f => f.row === row - 1 && f.col === col\r\n                    ).feldKey\r\n                dispatch(changeToNextField(nextFieldFeldKey))\r\n            }\r\n            dispatch(setZugStatus('gezogen'))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            key={feldKey}\r\n            className={'feld'}\r\n            style={style}\r\n            onMouseOver={handleMouseOver}\r\n            onMouseOut={handleMouseOut}\r\n            onClick={handleClick}\r\n            onMouseDown={handleMouseDown}\r\n            data-testid={feldKey}\r\n        ></div>\r\n    )\r\n}\r\n","const getFeld = (felder, row, col) => {\r\n    const feld = felder.find(f => f.row === row && f.col === col)\r\n    return feld\r\n}\r\n\r\nconst checkSeries = (c, r, felder, spieler, toChange, hasWon) => {\r\n    let row1, row2, row3, row4, col1, col2, col3, col4\r\n    switch (toChange) {\r\n        case 'down':\r\n            row1 = r\r\n            row2 = r + 1\r\n            row3 = r + 2\r\n            row4 = r + 3\r\n            col1 = c\r\n            col2 = c\r\n            col3 = c\r\n            col4 = c\r\n            break\r\n        case 'right':\r\n            row1 = r\r\n            row2 = r\r\n            row3 = r\r\n            row4 = r\r\n            col1 = c\r\n            col2 = c + 1\r\n            col3 = c + 2\r\n            col4 = c + 3\r\n            break\r\n        case 'downRight':\r\n            row1 = r\r\n            row2 = r + 1\r\n            row3 = r + 2\r\n            row4 = r + 3\r\n            col1 = c\r\n            col2 = c + 1\r\n            col3 = c + 2\r\n            col4 = c + 3\r\n            break\r\n        case 'upRight':\r\n            row1 = r\r\n            row2 = r - 1\r\n            row3 = r - 2\r\n            row4 = r - 3\r\n            col1 = c\r\n            col2 = c + 1 \r\n            col3 = c + 2\r\n            col4 = c + 3\r\n            break\r\n    }\r\n    let feld1 = getFeld(felder, row1, col1)\r\n    let feld2 = getFeld(felder, row2, col2)\r\n    let feld3 = getFeld(felder, row3, col3)\r\n    let feld4 = getFeld(felder, row4, col4)\r\n\r\n    hasWon =\r\n        feld1.farbe === spieler &&\r\n        feld2.farbe === spieler &&\r\n        feld3.farbe === spieler &&\r\n        feld4.farbe === spieler\r\n\r\n    return hasWon\r\n}\r\n\r\nexport const checkHasWon = (felder, spieler) => {\r\n    let hasWon = false\r\n    let toChange = 'down'\r\n    for (let c=1; c<8; c++) {\r\n        for (let r=1; r<4; r++) {\r\n            hasWon = checkSeries(c, r, felder, spieler, toChange, hasWon)\r\n            if (hasWon) {\r\n                return hasWon\r\n            }\r\n        }\r\n    }\r\n    toChange = 'right'\r\n    for (let c=1; c<5; c++) {\r\n        for (let r=1; r<7; r++) {\r\n            hasWon = checkSeries(c, r, felder, spieler, toChange, hasWon)\r\n            if (hasWon) {\r\n                return hasWon\r\n            }\r\n        }\r\n    }\r\n    toChange = 'downRight'\r\n    for (let c=1; c<5; c++) {\r\n        for (let r=1; r<4; r++) {\r\n            hasWon = checkSeries(c, r, felder, spieler, toChange, hasWon)\r\n            if (hasWon) {\r\n                return hasWon\r\n            }\r\n        }\r\n    }\r\n    toChange = 'upRight'\r\n    for (let c=1; c<5; c++) {\r\n        for (let r=4; r<7; r++) {\r\n            hasWon = checkSeries(c, r, felder, spieler, toChange, hasWon)\r\n            if (hasWon) {\r\n                return hasWon \r\n            }\r\n        }\r\n    }\r\n    return hasWon\r\n}\r\n\r\nconst getFieldsNextMove = (felder, feld, player) => {\r\n    const fieldsNextMove = felder.map(f => {\r\n        if (f.feldKey === feld.feldKey) {\r\n            return {...f, farbe: player}\r\n        } else {\r\n            return f\r\n        }\r\n    })\r\n    return fieldsNextMove\r\n}\r\n\r\nconst checkFields = (felder, nextFields, player) => {\r\n    for (let feld of nextFields) {\r\n        const fieldsNextMove = getFieldsNextMove(felder, feld, player)\r\n        const playerHasWon = checkHasWon(fieldsNextMove, player)\r\n        if (playerHasWon) {\r\n            return feld\r\n        }\r\n    }\r\n}\r\n\r\nconst checkFieldsNextMove = (felder, feld, spieler, gegner, reihe) => {\r\n    let wessenReihe\r\n    reihe === spieler ? wessenReihe = spieler : wessenReihe = gegner\r\n    let fieldsNextMove = getFieldsNextMove(felder, feld, spieler)\r\n    const gegnerField = felder.find(f => f.row === feld.row - 1 && f.col === feld.col)\r\n    fieldsNextMove = getFieldsNextMove(fieldsNextMove, gegnerField, wessenReihe)\r\n    let hasWon = checkHasWon(fieldsNextMove, wessenReihe)\r\n    return hasWon\r\n}\r\n\r\nexport const getComputerZug = (felder, spieler) => {\r\n    let field, gegner\r\n    spieler === 'rot' ? gegner = 'gelb' : gegner = 'rot'\r\n    let nextFields = felder.filter(f => f.isNextField)\r\n\r\n    // finds winning move\r\n    field = checkFields(felder, nextFields, spieler)\r\n    if (field) {\r\n        return field\r\n    }\r\n\r\n    // averts loss\r\n    field = checkFields(felder, nextFields, gegner)\r\n    if (field) {\r\n        return field\r\n    }\r\n    // checks for moves that would lead to immediate loss\r\n    let fieldsNextMove = nextFields.filter(f =>\r\n        f.row === 1 || !checkFieldsNextMove(felder, f, spieler, gegner, gegner))\r\n    if (fieldsNextMove.length > 0) {\r\n        nextFields = fieldsNextMove\r\n    }\r\n\r\n    // averts destroying one's own opportunities\r\n    fieldsNextMove = nextFields.filter(f =>\r\n        f.row === 1 || !checkFieldsNextMove(felder, f, spieler, gegner, spieler))\r\n    if (fieldsNextMove.length > 0) {\r\n        nextFields = fieldsNextMove\r\n    }\r\n\r\n    // averts ground row loss\r\n    const threatGroundRow = felder.filter(f => f.row === 6 && f.farbe === gegner).length === 2\r\n        && felder.filter(f => f.row === 6 && f.farbe === spieler).length === 0\r\n    if (threatGroundRow) {\r\n        nextFields = nextFields.filter(f => f.row === 6 && f.col > 1 && f.col < 7)\r\n    }\r\n\r\n    // prefers middle\r\n    const middleIsUsable = nextFields.find(f => f.col === 4 && f.row !== 1)\r\n    if (middleIsUsable) {\r\n        field = nextFields.find(f => f.col === 4)\r\n        return field\r\n    }\r\n\r\n    // selects randomly\r\n    let indexField = Math.floor(Math.random() * nextFields.length)\r\n    //alert(indexField)\r\n    field = nextFields[indexField]\r\n    return field\r\n}\r\n","import './spiel.css';\r\nimport {useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Feld} from './feld.js'\r\nimport {\r\n    changeFarbe,\r\n    changeIsNextField,\r\n    changeToNextField,\r\n    toggleSpieler,\r\n    setZugStatus,\r\n    setStatus,\r\n    setZug,\r\n    toggleComputerZieht\r\n} from './spielSlice.js'\r\nimport {checkHasWon, getComputerZug} from './spielFunctions.js'\r\n\r\nexport const Spiel = () => {\r\n    const felderObject = useSelector(state => state.spiel.felder)\r\n    const generateFelder = () => {\r\n        let felderArray = []\r\n        for (let item of felderObject) {\r\n            const {row, col, feldKey} = item\r\n\r\n            const feld = <Feld\r\n                feldKey={feldKey}\r\n                row={row}\r\n                col={col}\r\n            />\r\n                \r\n            felderArray.push(feld)\r\n        }\r\n        return felderArray\r\n    }\r\n\r\n    const newFields = generateFelder()\r\n    const dispatch = useDispatch()\r\n    const felder = useSelector(state => state.spiel.felder)\r\n    const status = useSelector(state => state.spiel.status)\r\n    const zugStatus = useSelector(state => state.spiel.zugStatus)\r\n    const spieler = useSelector(state => state.spiel.spieler)\r\n    const zug = useSelector(state => state.spiel.zug)\r\n    const computerSpielt = useSelector(state => state.menue.computerSpielt)\r\n    const computerZieht = useSelector(state => state.spiel.computerZieht)\r\n\r\n    useEffect(() => {\r\n        if (status === 'laufend' && zugStatus === 'gezogen') {\r\n            dispatch(setZugStatus('bereit'))\r\n            const resultCheckHasWon = checkHasWon(felder, spieler)\r\n            if (resultCheckHasWon) {\r\n                let winnerStatus\r\n                spieler === 'rot' ? winnerStatus = 'rotWon' : winnerStatus = 'gelbWon'\r\n                dispatch(setStatus(winnerStatus))\r\n            } else if (zug === 41) {\r\n                dispatch(setStatus('draw'))\r\n            } else {\r\n                dispatch(setZug('add'))\r\n                dispatch(toggleSpieler())\r\n                if (computerSpielt !== 'spieltNicht') {\r\n                    dispatch(toggleComputerZieht())\r\n                }\r\n            }\r\n        }\r\n    }, [computerSpielt, dispatch, felder, spieler, status, zug, zugStatus])\r\n\r\n    useEffect(() => {\r\n        if (status === 'laufend' && zugStatus === 'bereit' && computerZieht) {\r\n            const field = getComputerZug(felder, spieler)\r\n            const feldKey = field.feldKey\r\n            const row = field.row\r\n            const col = field.col\r\n\r\n            dispatch(changeFarbe({\r\n                feldKey: feldKey,\r\n                farbe: spieler\r\n            }))\r\n            dispatch(changeIsNextField(feldKey))\r\n            if (row > 1) {\r\n                const nextFieldFeldKey = felder.filter(\r\n                    f => f.row === row - 1 && f.col === col\r\n                    )[0].feldKey\r\n                dispatch(changeToNextField(nextFieldFeldKey))\r\n            }\r\n            dispatch(setZugStatus('gezogen'))\r\n        }\r\n    }, [computerZieht, dispatch, felder, spieler, status, zug, zugStatus])\r\n\r\n    return (\r\n        <div className='spiel' data-testid='spiel'>\r\n            {newFields}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport {Menue} from './features/Menue/menue.js';\nimport {Spiel} from './features/Spiel/spiel.js';\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Vier gewinnt!</h1>\n                <p>Spiele eine Partie Vier gewinnt!</p>\n            </header>\n            <main> \n                <Menue />\n                <Spiel />\n            </main>\n            <footer>\n                <p>Created by Michael Oberst</p>\n            </footer>\n        </div>\n    );\n}\n\nexport default App;\n","import {configureStore} from '@reduxjs/toolkit';\nimport menueReducer from '../features/Menue/menueSlice'\nimport spielReducer from '../features/Spiel/spielSlice'\n\nexport const store = configureStore({\n    reducer: {\n        menue: menueReducer,\n        spiel: spielReducer\n    },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from './app/store';\nimport {Provider} from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}